@page "/login"
@layout EmptyLayout


<div class="container-fluid h-100">
    <div class="row justify-content-center align-items-center h-100">

        <div class="col col-sm-6 col-md-6 col-lg-4 col-xl-3">

            <EditForm Model="@userLoginRequest" OnValidSubmit="LoginUser">
                <DataAnnotationsValidator />

                <div class="form-group mb-2">
                    <input @bind-value="userLoginRequest.Email" class="form-control form-control-lg" type="text"
                        placeholder="E-Mail Address" />
                </div>

                <div class="form-group mb-2">
                    <input @bind-value="userLoginRequest.Password" class="form-control form-control-lg" type="password"
                        placeholder="Password" />
                </div>

                <div class="d-grid gap-2">
                    <button class="btn btn-info btn-block">Login</button>
                </div>

            </EditForm>

        </div>

    </div>
</div>

@code {

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ModalManager modalManager { get; set; }

    [Inject]
    NavigationManager navigationManager { get; set; }
    private UserLoginRequestDTO userLoginRequest = new UserLoginRequestDTO();

    private async Task LoginUser()
    {
        var httpResponse = await httpClient.PostAsJsonAsync("api/users/login", userLoginRequest);
        if (httpResponse.IsSuccessStatusCode)
        {
            var response = httpResponse.Content.ReadFromJsonAsync<ServiceResponse<UserLoginResponseDTO>>();
            if (response.Result.Success)
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                await modalManager.ShowMessageAsync("Login Error", response.Result.Message);
            }
        }
    }

}